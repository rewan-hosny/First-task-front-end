{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;AAAA,sCAA0C;AAE1C,sEAA8D;AAO9D;IAQE,sBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAP5C,UAAK,GAAG,YAAY,CAAC;QAErB,mBAAc,GAAY,KAAK,CAAC;QAEhC,iBAAY,GAAkB,IAAI,CAAC,CAAC,oBAAoB;QAExD,kBAAa,GAAkB,IAAI,oCAAa,EAAE,CAAC;IACH,CAAC;IACjD,+BAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,qCAAc,GAAd,UAAe,KAAU;QACvB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,oCAAa,GAAb;QAAA,iBAiBC;QAhBC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAC7C,UAAC,QAAQ;gBACP,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;gBAC9B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;gBACvC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE7B,CAAC,EACD,UAAC,KAAK;gBACJ,OAAO,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC;YAExC,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAnCU,YAAY;QALxB,gBAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;SACnC,CAAC;OACW,YAAY,CAoCxB;IAAD,mBAAC;CApCD,AAoCC,IAAA;AApCY,oCAAY","file":"app.component.js","sourcesContent":["import { Component } from '@angular/core';\nimport { DataService } from './services/data.service';\nimport { ResponseModel } from './models/ResponseModel.module';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'first-task';\n  file: File | undefined;\n  isDownloadable: boolean = false; \n\n  errorMessage: string | null = null; // Add this property\n\n  responseModel: ResponseModel = new ResponseModel();\n  constructor(private dataService: DataService) { }\n  ngOnInit(): void {\n    this.UploadFileCsv();\n  }\n\n  onFileSelected(event: any) {\n    this.file = event.target.files[0]; \n    this.UploadFileCsv();\n  }\n\n  UploadFileCsv(): void {\n    if (this.file) {\n      this.dataService.uploadCsv(this.file).subscribe(\n        (response) => {\n          this.responseModel = response;\n          this.errorMessage = \"\";\n          console.log('API Response:', response);\n          this.isDownloadable = true;\n  \n        },\n        (error) => {\n          console.error('API Error:', error);\n          this.errorMessage = error.error.error;\n      \n        }\n      );\n    } \n  }\n}\n"]}